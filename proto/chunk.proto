syntax = "proto3";

package chunk;

service Chunk {
    rpc Upload(stream UploadRequest) returns (UploadResponse);
    rpc Read(ReadRequest) returns (ReadResponse);
    rpc Delete(DeleteRequest) returns (DeleteResponse);
    rpc Append(AppendRequest) returns (AppendResponse);
    rpc TransferChunk(SendChunkRequest) returns (SendChunkResponse);
    rpc SendOtp(OtpRequest) returns (OtpResponse);
}

message FileInfo {
    string file_name = 1;
    uint64 chunk_id = 2;
}

message FileChunk {
    bytes data = 1;
}

// Upload messages
message UploadRequest {
    oneof request {
        FileInfo info = 1;
        FileChunk chunk = 2;
    }
    string otp = 3;
    bool is_internal = 4;
}

message UploadResponse {
    string message = 1;
}

// Read messages
message ReadRequest {
    string file_name = 1;
    uint64 chunk_id = 2;
    string otp = 3;
}

message ReadResponse {
    string content = 1;
}

// Delete messages
message DeleteRequest {
    string file_name = 1;
    uint64 chunk_id = 2;
    string otp = 3;
}

message DeleteResponse {
    string message = 1;
}

message AppendRequest {
  string file_name = 1; // File name to append to
  uint64 chunk_id = 2;  // Chunk id of file
  string data = 3;      // Data to append
  string otp = 4;
}

message AppendResponse {
  string message = 1; // Result message
}

// Transfer chunks, for internal usage
message SendChunkRequest {
  string chunk_name = 1;
  string target_address = 2;
}

message SendChunkResponse {
    string message = 1;
}

// Transfer OTP, for internal usage
message OtpRequest {
    string username = 1;
    string otp = 2;
    uint64 expiration_time = 3;
}

message OtpResponse {
    string message = 1;
}
